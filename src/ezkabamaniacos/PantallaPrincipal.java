/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ezkabamaniacos;

<<<<<<< HEAD
import static ezkabamaniacos.Utilidad.distanciaDosCoordenadasGeograficas;
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
import general.MysqlConnect;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.ResultSet;
import java.util.Iterator;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ScrollPaneConstants;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import util.Apariencia;
import util.Cadena;

/**
 *
 * @author Txus
 */
public class PantallaPrincipal extends javax.swing.JFrame {

    public enum Columna {

        NUMERO_PUNTO(0),
        FECHA(1),
        HORA(2),
        DISTANCIA_TRAMO(3), 
        DISTANCIA_DESDE_INICIO(4),
        VELOCIDAD_TRAMO(5),
        LATITUD(6),
        LONGITUD(7),
        ELEVACION(8),
        PULSACIONES(9),
<<<<<<< HEAD
        TIEMPO_A_INICIO(10),
        TIPO_PUNTO(11);
=======
        TIEMPO_A_INICIO(10);
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
        private int value;

        private Columna(int value) {
            this.value = value;
        }
    }
    
    Gpx gpx = null;
    
    JTable jtTrack;
    JScrollPane spTrack;
    
    DefaultTableCellRenderer tcr;
    TableCellRenderer tcr2;
    
    ResultSet rs = null;
    MysqlConnect m = null;
    
    DefaultTableModel modeloTabla = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            // Para que no podamos editar los datos de la tabla
            return false;
        }
    };
    
    /**
     * Creates new form PantallaPrincipal
     */
    public PantallaPrincipal() {
        initComponents();       
        initMisComponentes();        
        m = MysqlConnect.getDbCon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbSalir = new javax.swing.JButton();
        jlNombreTrack = new javax.swing.JLabel();
        jtffNombreTrack = new util.JTextFieldFijo(255);
        jbAñadirTrack = new javax.swing.JButton();
        jbSetTrackMaestro = new javax.swing.JButton();
        jbSetPuntoInicial = new javax.swing.JButton();
        jbBuscarTrack = new javax.swing.JButton();
        jlTrackMaestro = new javax.swing.JLabel();
        jbBuscarTrackMaestro = new javax.swing.JButton();
        jtffNombreTrackMaestro = new util.JTextFieldFijo();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EzkabaManiacos Comparación de Tracks");

        jbSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SALIR.gif"))); // NOI18N
        jbSalir.setPreferredSize(new java.awt.Dimension(35, 35));
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jlNombreTrack.setText("Nombre del Track");

        jtffNombreTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtffNombreTrackActionPerformed(evt);
            }
        });

        jbAñadirTrack.setText("Añadir Track");
        jbAñadirTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAñadirTrackActionPerformed(evt);
            }
        });

        jbSetTrackMaestro.setText("Seleccionar Track Maestro");

        jbSetPuntoInicial.setText("Establecer Punto Inicial");

        jbBuscarTrack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarTrack.setPreferredSize(new java.awt.Dimension(30, 30));
        jbBuscarTrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarTrackActionPerformed(evt);
            }
        });

        jlTrackMaestro.setText("Track Maestro");

        jbBuscarTrackMaestro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/BUSCAR.gif"))); // NOI18N
        jbBuscarTrackMaestro.setPreferredSize(new java.awt.Dimension(30, 30));
        jbBuscarTrackMaestro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarTrackMaestroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(jbAñadirTrack)
                        .addGap(30, 30, 30)
                        .addComponent(jbSetTrackMaestro)
                        .addGap(34, 34, 34)
                        .addComponent(jbSetPuntoInicial))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jlTrackMaestro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbBuscarTrackMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jlNombreTrack)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscarTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtffNombreTrack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtffNombreTrackMaestro, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE))))
<<<<<<< HEAD
                .addContainerGap(540, Short.MAX_VALUE))
=======
                .addContainerGap(323, Short.MAX_VALUE))
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jlNombreTrack))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtffNombreTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbBuscarTrack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbBuscarTrackMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtffNombreTrackMaestro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlTrackMaestro, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 436, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbAñadirTrack)
                        .addComponent(jbSetTrackMaestro)
                        .addComponent(jbSetPuntoInicial)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtffNombreTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtffNombreTrackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtffNombreTrackActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbBuscarTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarTrackActionPerformed
        
        IndiceTracks it = new IndiceTracks(new javax.swing.JFrame(), true);
        if(it.getId() > 0)
            cargaTablaTrack(it.getId());
        //System.out.println("IdTrack: " + it.getId());
    }//GEN-LAST:event_jbBuscarTrackActionPerformed

    private void jbAñadirTrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAñadirTrackActionPerformed
        AñadirTrack at = new AñadirTrack(new javax.swing.JFrame(), true);
        gpx = at.devuelveGpx();
    }//GEN-LAST:event_jbAñadirTrackActionPerformed

    private void jbBuscarTrackMaestroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarTrackMaestroActionPerformed
        IndiceTracks it = new IndiceTracks(new javax.swing.JFrame(), true);
        System.out.println("IdTrack Maestro: " + it.getId());
    }//GEN-LAST:event_jbBuscarTrackMaestroActionPerformed


        // Con esto conseguimos agregar componentes 'hechos a mano' a la
    // pantalla que ya contiene los componentes generados por NetBeans
    private void initMisComponentes(){

        
        // La tabla contendrá estas columnas
        modeloTabla.addColumn("Punto");
        modeloTabla.addColumn("Fecha");
        modeloTabla.addColumn("Hora");
        modeloTabla.addColumn("Distancia Tramo");
        modeloTabla.addColumn("Distancia a Inicio");
        modeloTabla.addColumn("Velocidad");
        modeloTabla.addColumn("Latitud");
        modeloTabla.addColumn("Longitud");
        modeloTabla.addColumn("Elevacion");
        modeloTabla.addColumn("Pulsaciones");  
        modeloTabla.addColumn("Tiempo a Inicio"); 
<<<<<<< HEAD
        modeloTabla.addColumn("Tipo");
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
        jtTrack = new JTable(modeloTabla);
        //jtTrack.setFont(Apariencia.cambiaFuente(Font.PLAIN, 13));

        TableColumn columna = new TableColumn();
        // Establecemos el ancho
        jtTrack.getColumn("Punto").setMaxWidth(60);
        jtTrack.getColumn("Fecha").setMaxWidth(100);
        jtTrack.getColumn("Hora").setMaxWidth(80);
        jtTrack.getColumn("Distancia Tramo").setMaxWidth(90);
        jtTrack.getColumn("Distancia a Inicio").setMaxWidth(90);
        jtTrack.getColumn("Velocidad").setMaxWidth(90);
        jtTrack.getColumn("Latitud").setMaxWidth(100);
        jtTrack.getColumn("Longitud").setMaxWidth(100);
        jtTrack.getColumn("Elevacion").setMaxWidth(90);
        jtTrack.getColumn("Pulsaciones").setMaxWidth(90);
        jtTrack.getColumn("Tiempo a Inicio").setMaxWidth(80);
<<<<<<< HEAD
        jtTrack.getColumn("Tipo").setMaxWidth(200);
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
         // Hacemos que las columnas se alineen a la DERECHA
        tcr = new DefaultTableCellRenderer();
        tcr.setHorizontalAlignment(SwingConstants.RIGHT);        
        jtTrack.getColumn("Punto").setCellRenderer(tcr);
        jtTrack.getColumn("Fecha").setCellRenderer(tcr);
        jtTrack.getColumn("Hora").setCellRenderer(tcr);
        jtTrack.getColumn("Distancia Tramo").setCellRenderer(tcr);
        jtTrack.getColumn("Distancia a Inicio").setCellRenderer(tcr);
        jtTrack.getColumn("Velocidad").setCellRenderer(tcr);
        jtTrack.getColumn("Latitud").setCellRenderer(tcr);
        jtTrack.getColumn("Longitud").setCellRenderer(tcr);
        jtTrack.getColumn("Elevacion").setCellRenderer(tcr);
        jtTrack.getColumn("Pulsaciones").setCellRenderer(tcr);
<<<<<<< HEAD
        jtTrack.getColumn("Tiempo a Inicio").setCellRenderer(tcr);   
        jtTrack.getColumn("Tipo").setCellRenderer(tcr); 
=======
        jtTrack.getColumn("Tiempo a Inicio").setCellRenderer(tcr);
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
        // Hacemos que la comluna del saldo se alinee a la derecha y
        // que salga en rojo si es negativa.
        //tcr2 = new TableCellRenderer();
        //jtTrack.getColumn("Debe").setCellRenderer(tcr2);
        //jtTrack.getColumn("Haber").setCellRenderer(tcr2);

        // Hace que el fondo sea completamente blanco
        jtTrack.setFillsViewportHeight(true);
        
        jtTrack.addKeyListener(new EscapeListener());
        
        // Creamos un JscrollPane y le agregamos la JTable
        spTrack = new JScrollPane(jtTrack);
        // Si quisieramos barra horizontal, descomentar la linea siguiente
        spTrack.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        // Agregamos el JScrollPane al contenedor
<<<<<<< HEAD
        spTrack.setBounds(10, 100, 1170, 400);
=======
        spTrack.setBounds(10, 100, 970, 400);
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        spTrack.setFont(Apariencia.cambiaFuente());
        spTrack.setBackground(Color.yellow);
        getContentPane().add(spTrack);
        
        
    }
    
    
    class TableCellRenderer extends DefaultTableCellRenderer {

        private static final long serialVersionUID = 1L;

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int col) {

            Component c = super.getTableCellRendererComponent(table, value,
                    isSelected, hasFocus, row, col);
            this.setHorizontalAlignment(SwingConstants.RIGHT);
            Object valueAt = table.getModel().getValueAt(row, col);
            String s = "";

            if (valueAt != null) {
                s = valueAt.toString();
            }

            if (s.contains("-")) {
                c.setForeground(Color.RED);
                //c.setBackground(Color.gray);
            } else {
                c.setForeground(Color.black);
                //c.setBackground(Color.WHITE);
            }

            return c;
        }
    }
    
    class EscapeListener implements KeyListener {

        @Override
        public void keyPressed(KeyEvent arg0) {
            // TODO Auto-generated method stub
            int id = arg0.getKeyCode();

            if (id == KeyEvent.VK_ESCAPE) {
               System.exit(0);
            }
        }

        @Override
        public void keyReleased(KeyEvent arg0) {

        }

        @Override
        public void keyTyped(KeyEvent arg0) {

        }

    }
    
    private void cargaTablaTrack(int id){
        gpx = null;
        gpx = Utilidad.cargaTrackDesdeBd(id);
        modeloTabla.setRowCount(0);
<<<<<<< HEAD
        CoordenadaGeografica cgKm0 = new CoordenadaGeografica(42.837620, -1.654420);
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
        if(gpx == null){
            Apariencia.mensajeInformativo(4, "Error al cargar el Track.");
            return;
        }                
        
        jtffNombreTrack.setText(gpx.time + " - " + gpx.nombreTrack);
        //Apariencia.mensajeInformativo(4, "Track cargado correctamente.");
            
        CoordenadaGeografica cg0 = new CoordenadaGeografica();
        CoordenadaGeografica cg1 = new CoordenadaGeografica();
        CoordenadaUTM utm0 = new CoordenadaUTM();
        CoordenadaUTM utm1 = new CoordenadaUTM();        
        String horaInicial = "";
        String hora0 = "";
        String hora1 = "";
        boolean esPrimerPunto = true;
        double distanciaAlInicio = 0.0;
        double distanciaTramo = 0.0;
        double velocidadTramo = 0.0;
<<<<<<< HEAD
        double distanciaInicioSegmento = 0.0;
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        int diferenciaTramoSegundos = 0;
        int diferenciaInicioSegundos = 0;
        
        TrackPoint punto = new TrackPoint();
<<<<<<< HEAD
       
        
        int puntoTrack = 1;
        Iterator<TrackPoint> itrPartidos = gpx.track.iterator();
        Object fila[] = {"", "", "", "", "", "", "", "", "", "", "", ""};
=======
        int puntoTrack = 1;
        Iterator<TrackPoint> itrPartidos = gpx.track.iterator();
        Object fila[] = {"", "", "", "", "", "", "", "", "", "", ""};
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
        
        for(int i = 0; i < gpx.track.size() ; i++){
        //while(itrPartidos.hasNext()){
        //punto = itrPartidos.next();
            
<<<<<<< HEAD
           punto = gpx.track.get(i);           
=======
           punto = gpx.track.get(i);
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
           
           fila[0] = String.valueOf(puntoTrack);
           fila[1] = punto.dia;
           fila[2] = punto.hora;
           
           fila[6] = String.valueOf(punto.latitud);
           fila[7] = String.valueOf(punto.longitud);
           fila[8] = String.valueOf(punto.altura);
           fila[9] = String.valueOf(punto.pulsaciones);
           
           
           if(esPrimerPunto == true){
                esPrimerPunto = false;
                
                cg0.setLatitud(punto.latitud);
                cg0.setLongitud(punto.longitud);
                horaInicial = hora0 = punto.hora;
                
                utm0 = Utilidad.geograficaToUtm(cg0);
                                
                if(i < gpx.track.size()){
                    i++;
                    //punto = itrPartidos.next();
                    punto = gpx.track.get(i);
                    
                    cg1.setLatitud(punto.latitud);
                    cg1.setLongitud(punto.longitud);
                    hora1 = punto.hora;
                }else{
                    cg1.setLatitud(cg0.getLatitud());
                    cg1.setLongitud(cg0.getLongitud());
                    hora1 = hora0;
                }          
                
                utm1 = Utilidad.geograficaToUtm(cg1);
           }else{
               cg1.setLatitud(punto.latitud);
               cg1.setLongitud(punto.longitud);
               
               hora1 = punto.hora;
               
               utm1 = Utilidad.geograficaToUtm(cg1);
           } 
           
           distanciaTramo = Utilidad.distanciaDosCoordenadasUTM(utm0, utm1);
           distanciaAlInicio += distanciaTramo;  
           fila[3] = Cadena.formatoConComaDecimal(distanciaTramo);
           fila[4] = Cadena.formatoConComaDecimal(distanciaAlInicio);
           
           diferenciaTramoSegundos = Utilidad.horaConformatoAsegundos(hora1) - Utilidad.horaConformatoAsegundos(hora0);
           velocidadTramo = (distanciaTramo * 3.600) / (double) diferenciaTramoSegundos;
           fila[5] = String.valueOf(Cadena.formatoConComaDecimal(velocidadTramo));
           //fila[5] = String.valueOf(diferenciaTramoSegundos);
           
           diferenciaInicioSegundos = Utilidad.horaConformatoAsegundos(hora1)  - Utilidad.horaConformatoAsegundos(horaInicial);
           
           fila[10] = Utilidad.segundosHoraConFormato((long) diferenciaInicioSegundos);
<<<<<<< HEAD
           
           distanciaInicioSegmento = distanciaDosCoordenadasGeograficas(cgKm0, cg0);
           
           fila[11] = Cadena.formatoConComaDecimal(distanciaInicioSegmento);
=======
>>>>>>> c38e6c145f4d02f36413839bd98bce8263f1f7cc
           modeloTabla.addRow(fila);
           
           puntoTrack++;
           cg0.setLatitud(cg1.getLatitud());
           cg0.setLongitud(cg1.getLongitud());
           utm0.setLatitud(utm1.getLatitud());
           utm0.setLongitud(utm1.getLongitud());
           hora0 = hora1;
        }    
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAñadirTrack;
    private javax.swing.JButton jbBuscarTrack;
    private javax.swing.JButton jbBuscarTrackMaestro;
    private javax.swing.JButton jbSalir;
    private javax.swing.JButton jbSetPuntoInicial;
    private javax.swing.JButton jbSetTrackMaestro;
    private javax.swing.JLabel jlNombreTrack;
    private javax.swing.JLabel jlTrackMaestro;
    private util.JTextFieldFijo jtffNombreTrack;
    private util.JTextFieldFijo jtffNombreTrackMaestro;
    // End of variables declaration//GEN-END:variables
}
